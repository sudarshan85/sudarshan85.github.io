<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on A Learning Agent&#39;s Journal</title>
    <link>https://sudarshan85.github.io/post/</link>
    <description>Recent content in Posts on A Learning Agent&#39;s Journal</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>sudarshan85@gmail.com (Sudarshan)</managingEditor>
    <webMaster>sudarshan85@gmail.com (Sudarshan)</webMaster>
    <lastBuildDate>Fri, 21 Dec 2018 16:37:16 -0500</lastBuildDate>
    
	<atom:link href="https://sudarshan85.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deep Learning with Structured and Unstructured Data with FastAI - Part 2: Structured Data Model</title>
      <link>https://sudarshan85.github.io/post/mercari_2/</link>
      <pubDate>Fri, 21 Dec 2018 16:37:16 -0500</pubDate>
      <author>sudarshan85@gmail.com (Sudarshan)</author>
      <guid>https://sudarshan85.github.io/post/mercari_2/</guid>
      <description>Introduction This is my second post in a series of six exploring deep learning with structured and unstructured data with the FastAI library. Be sure to check out my post on data preparation. In this post, I&amp;rsquo;m going to describe my efforts in building a deep learning model that only uses structured data. My notebook for building this model can be found here. Much of the material here, including code and ideas, are taken on FastAI&amp;rsquo;s notebook on tabular data with the Rossmann Store Sales Kaggle dataset and the paper titled Entity Embeddings of Categorical Variables  by Cheng Guo and Felix Berkhahn.</description>
    </item>
    
    <item>
      <title>Deep Learning with Structured and Unstructured Data with FastAI - Part 1: Environment Setup and Data Preparation</title>
      <link>https://sudarshan85.github.io/post/mercari_1/</link>
      <pubDate>Tue, 18 Dec 2018 15:14:19 -0500</pubDate>
      <author>sudarshan85@gmail.com (Sudarshan)</author>
      <guid>https://sudarshan85.github.io/post/mercari_1/</guid>
      <description>Introduction Data comes in various forms such as images, text, and tabular form. Deep learning can be applied to each of these areas and has excelled by giving state-of-art results. In this blog post series, I&amp;rsquo;m going to explore how to apply Deep Learning to a mixture of data components, specifically, text data and tabular data. This is part of a bigger research project that I&amp;rsquo;m working on, which uses medical data (excluding images) which often consists of different types of data.</description>
    </item>
    
    <item>
      <title>Check Your Error Function</title>
      <link>https://sudarshan85.github.io/post/error_function/</link>
      <pubDate>Wed, 20 Jun 2018 14:28:42 -0400</pubDate>
      <author>sudarshan85@gmail.com (Sudarshan)</author>
      <guid>https://sudarshan85.github.io/post/error_function/</guid>
      <description>The underlying primary objective of any machine learning algorithm is to reduce the value of the error function (sometimes known as a cost function). We determine how our algorithm is performing during development by applying it to a validation set and reporting the error. Consequently, we tune the parameters of our algorithm to reduce the validation error.
The choice of the error function is dependent on the application. But regardless of what we choose, we have to implement it correctly so that the values returned by it actually guide us.</description>
    </item>
    
  </channel>
</rss>